/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AplikasiPenjualanBuku;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import com.mysql.jdbc.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import koneksi.koneksi;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author User
 */
public class DataBuku extends javax.swing.JFrame {

    /**
     * Creates new form DataBuku
     */
    public DataBuku() throws SQLException {
        initComponents();
        setLocationRelativeTo(this);
        load_data();
       IDOtomatis();
    }
public void load_data() throws SQLException{
            Connection kon = koneksi.koneksiDb();
            Object header []={"ID BUKU", "JUDUL BUKU", "PENERBIT", "HARGA"};
            DefaultTableModel data=new DefaultTableModel(null, header);
            tBuku.setModel(data);
            String sql_data="SELECT * FROM buku";
            try
           {
                
             
                Statement st=kon.createStatement();
                ResultSet rs=st.executeQuery(sql_data);
                while (rs.next())
                {
                String d1=rs.getString(1);
                String d2=rs.getString(2);
                String d3=rs.getString(3);
                String d4=rs.getString(4);
         
                String d[]={d1, d2, d3, d4};
                data.addRow(d);
                }

            }
            catch(Exception e)
            { 
                JOptionPane.showMessageDialog(null, e);
            }           
}       public void IDOtomatis() {
    try {
        Connection kon = koneksi.koneksiDb();
        Statement st = kon.createStatement();

        String sql_id = "SELECT MAX(id_buku) FROM buku"; // Mengambil nilai maksimum dari ID buku
        ResultSet rs = st.executeQuery(sql_id);
        if (rs.next()) {
            String id_buku = rs.getString(1); // Mengambil nilai ID buku maksimum
            if (id_buku != null) {
                int idNumber = Integer.parseInt(id_buku.substring(1)) + 1;
                String AN = String.format("%05d", idNumber); // Format ID buku dengan 5 digit
                
            } else {
               
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tBuku = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setState(5);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tBuku.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID BUKU", "JUDUL BUKU", "PENERBIT", "HARGA"
            }
        ));
        jScrollPane1.setViewportView(tBuku);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 420, 150));

        jButton1.setBackground(new java.awt.Color(153, 204, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/tambahbuku.png"))); // NOI18N
        jButton1.setText("Tambah Buku");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/kembali.png"))); // NOI18N
        jButton2.setText("Kembali");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, -1));

        jButton3.setBackground(new java.awt.Color(255, 255, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/pencil_edit.png"))); // NOI18N
        jButton3.setText("Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 110, 40));

        jButton4.setBackground(new java.awt.Color(204, 204, 204));
        jButton4.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Hapus.png"))); // NOI18N
        jButton4.setText("Hapus");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, -1, 40));

        jButton5.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/tambahbuku.png"))); // NOI18N
        jButton5.setText("Tambah Buku");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jButton6.setBackground(new java.awt.Color(204, 255, 255));
        jButton6.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/CETAK.png"))); // NOI18N
        jButton6.setText("Cetak");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 110, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Desain tanpa judul (1).png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
            int selectedRow = tBuku.getSelectedRow();

            if (selectedRow != -1) {
                String idBuku = tBuku.getValueAt(selectedRow, 0).toString();


                String judulBuku = tBuku.getValueAt(selectedRow, 1).toString();
                String penerbit = tBuku.getValueAt(selectedRow, 2).toString();
                String harga = tBuku.getValueAt(selectedRow, 3).toString();

                // Menggunakan input dialog untuk memperbarui nilai
                judulBuku = JOptionPane.showInputDialog(null, "Masukkan judul buku", judulBuku);
                penerbit = JOptionPane.showInputDialog(null, "Masukkan penerbit", penerbit);
                harga = JOptionPane.showInputDialog(null, "Masukkan harga", harga);

                // Menyimpan perubahan ke dalam tabel
                tBuku.setValueAt(judulBuku, selectedRow, 1);
                tBuku.setValueAt(penerbit, selectedRow, 2);
                tBuku.setValueAt(harga, selectedRow, 3);

                // Update data ke dalam database
                try {
                    Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/buku", "root", "");

                   String sql = "UPDATE buku SET judul_buku=?, penerbit=?, harga=? WHERE id_buku=?";
                    try (PreparedStatement preparedStatement = (PreparedStatement) connection.prepareStatement(sql)) {
                        preparedStatement.setString(4, idBuku);
                        preparedStatement.setString(1, judulBuku);
                        preparedStatement.setString(2, penerbit);
                        preparedStatement.setString(3, harga);
                     
                        int affectedRows = preparedStatement.executeUpdate();
                        if (affectedRows > 0) {
                            JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
                        } else {
                            JOptionPane.showMessageDialog(null, "Gagal mengupdate data.");
                        }
                    }


                    connection.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(null, "Pilih data yang akan diupdate", "Peringatan", JOptionPane.WARNING_MESSAGE);
            }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
   // Mendapatkan baris terpilih
int selectedRow = tBuku.getSelectedRow();

// Memeriksa apakah ada baris yang terpilih
if (selectedRow != -1) {
    // Menampilkan konfirmasi untuk menghapus data
    int konfirmasi = JOptionPane.showConfirmDialog(
        null,
        "Apakah Anda yakin ingin menghapus data ini?",
        "Konfirmasi Hapus",
        JOptionPane.YES_NO_OPTION);

    // Jika user memilih "Yes", hapus data dari tabel dan database
    if (konfirmasi == JOptionPane.YES_OPTION) {
        try {
            // Mendapatkan nilai ID buku dari baris terpilih
            String idBuku = tBuku.getValueAt(selectedRow, 0).toString();

            // Hapus baris dari tabel
            DefaultTableModel model = (DefaultTableModel) tBuku.getModel();
            model.removeRow(selectedRow);

            // Hapus data dari database
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/buku", "root", "");
            String sql = "DELETE FROM buku WHERE id_buku=?";
            try (PreparedStatement preparedStatement = (PreparedStatement) connection.prepareStatement(sql)) {
                preparedStatement.setString(1, idBuku);
                int affectedRows = preparedStatement.executeUpdate();
                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus dari database");
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal menghapus data dari database.");
                }
            }
            connection.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage());
        }
    }
} else {
    JOptionPane.showMessageDialog(null, "Pilih data yang akan dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
}

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    new FTambahBuku().show();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Utama().show();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        try {
            String reportPath = "src/Report/LBuku.jasper";
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/buku", "root", "");

            HashMap<String, Object> parameters = new HashMap<>();

            JasperPrint print = JasperFillManager.fillReport(reportPath, parameters, conn);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error displaying report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DataBuku().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DataBuku.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tBuku;
    // End of variables declaration//GEN-END:variables

    private Connection getConnection() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
